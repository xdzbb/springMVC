<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mvc</groupId>
  <artifactId>springMVC</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>springMVC</name>
  <description/>  
   <!-- 依赖软件的版本 -->
  <properties>
  		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring.version>3.1.2.RELEASE</spring.version>
        <junit.version>4.11-beta-1</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <jstl.version>1.2</jstl.version>            
        <druid.version>0.2.8</druid.version>       
        <hibernate.version>3.5.0-Final</hibernate.version> 
        <aspectj.version>1.7.0</aspectj.version>
        <commons.lang.version>3.1</commons.lang.version>
        <servlet.version>2.5</servlet.version>
        <slf4j.version>1.6.0</slf4j.version>
        <mysql.version>5.1.21</mysql.version>
        <druid.version>0.2.8</druid.version>
        <cglib.version>2.1</cglib.version>
        <fastjson.version>1.1.24</fastjson.version>
        <javassist.version>3.11.0.GA</javassist.version>
        <servlet.jsp.version>2.2.1-b03</servlet.jsp.version> 
        <antlr.version>2.7.6</antlr.version>
        <jta.version>1.1</jta.version>
        <commons-collections.version>3.1</commons-collections.version>
        <ehcache.version>1.2.3</ehcache.version>
        <dom4j.version>1.6.1</dom4j.version>
        <commons-fileupload.version>1.3</commons-fileupload.version>
        <maven.compiler.version>2.3.2</maven.compiler.version>       
        <maven.resources.version>2.5</maven.resources.version> 
        <maven.war.version>2.2</maven.war.version>       
  </properties>
  <dependencies>
  	<dependency>
	    <groupId>commons-fileupload</groupId>
	    <artifactId>commons-fileupload</artifactId>
	    <version>${commons-fileupload.version}</version>
	</dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>${jstl.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>${servlet.jsp.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-nop</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${hibernate.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-annotations</artifactId>
      <version>${hibernate.version}</version>      
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>${hibernate.version}</version>     
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${fastjson.version}</version>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.version}</version>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>${druid.version}</version>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>${aspectj.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>
     <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>${cglib.version}</version>
    </dependency>
    <dependency>
      <groupId>javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>${javassist.version}</version>
    </dependency>
    <dependency>
      <groupId>antlr</groupId>
      <artifactId>antlr</artifactId>
      <version>${antlr.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>${commons-collections.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
      <version>${jta.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache</artifactId>
      <version>${ehcache.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>    
    <dependency>
      <groupId>dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <version>${dom4j.version}</version>
    </dependency>   
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven.resources.version}</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
           <encoding>UTF-8</encoding>
           <compilerArguments>
             <extdirs>src/main/webapp/WEB-INF/lib</extdirs>
           </compilerArguments>
        </configuration>
      </plugin>
      <!--Begin Name:zbb Date:2013-11-24 AddReason:该插件用来打成war包 使用方式mvn war:war -->			
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven.war.version}</version>
        <configuration>
          <version>3.0</version>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
      <!--End Name:zbb Date:2013-11-24 AddReason:该插件用来打成war包 使用方式mvn war:war -->
      <plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.1.3</version>
				<configuration>
					<container>
					<containerId>tomcat6x</containerId>
						<type>remote</type>
					</container>
					<configuration>
						<type>runtime</type>
						<properties>
							<cargo.remote.username>manager</cargo.remote.username>
							<cargo.remote.password>manager</cargo.remote.password>
							<cargo.tomcat.manager.url>http://localhost:8080/manager</cargo.tomcat.manager.url>
						</properties>
					</configuration>
					<deployer>
						<type>installed</type>   
						<deployables>
							<deployable>
								<groupId>com.mvc</groupId>
								<artifactId>springMVC</artifactId>
								<type>war</type>
								<properties>
									<!-- deployer是部署时的相关配置，这个context是用来声明工程部署后的上下文，也就是 主机地址后面的一级目录位置。这个设置在maven构建中还是很必要的。因为maven默认打出 
										的war包是工程名+版本号，部署时如果不设置这里的context，那上下文就变成了工程名+版本号 的形式。这会使访问变得很不方便。注意，即使你通过修改war插件中的warName也是不能达到这个 
										目的，因为cargo认定的默认war包名就是工程名+版本号的形式。部署至tomcat下就会自动解压成ROOT -->
									<context>springMVC</context>
								</properties>
							</deployable>
						</deployables>
					</deployer>
				</configuration>
		</plugin>
    </plugins>
  </build>
</project>